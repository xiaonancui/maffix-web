name: Tests

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

env:
  NODE_VERSION: "18.19.0"

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Generate Prisma client
        run: npm run db:generate

      - name: Run unit tests
        run: npm run test
        env:
          NODE_ENV: test
          DATABASE_URL: "postgresql://test:test@localhost:5432/test"
          NEXTAUTH_SECRET: "test-secret"
          NEXTAUTH_URL: "http://localhost:3000"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            coverage/
            test-results/
          retention-days: 7

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Generate Prisma client
        run: npm run db:generate

      - name: Run database migrations
        run: npm run db:migrate
        env:
          DATABASE_URL: "postgresql://test:test@localhost:5432/test"

      - name: Seed test database
        run: npm run db:seed
        env:
          DATABASE_URL: "postgresql://test:test@localhost:5432/test"
        continue-on-error: true

      - name: Run integration tests
        run: npm run test:integration
        env:
          NODE_ENV: test
          DATABASE_URL: "postgresql://test:test@localhost:5432/test"
          NEXTAUTH_SECRET: "test-secret"
          NEXTAUTH_URL: "http://localhost:3000"
        continue-on-error: true

      - name: Upload integration test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: integration-test-results
          path: |
            coverage/
            test-results/
          retention-days: 7

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        continue-on-error: true

      - name: Build application
        run: npm run build
        env:
          NEXTAUTH_SECRET: "test-secret"
          NEXTAUTH_URL: "http://localhost:3000"
          DATABASE_URL: "postgresql://test:test@localhost:5432/test"

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          NODE_ENV: test
          DATABASE_URL: "postgresql://test:test@localhost:5432/test"
          NEXTAUTH_SECRET: "test-secret"
          NEXTAUTH_URL: "http://localhost:3000"
        continue-on-error: true

      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 7
