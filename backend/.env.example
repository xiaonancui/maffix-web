# =============================================================================
# Backend Environment Variables (NestJS API)
# =============================================================================
# Copy this file to .env.local in the backend directory
# These variables are server-side only and should never be exposed to clients
# =============================================================================

# -----------------------------------------------------------------------------
# Server Configuration
# -----------------------------------------------------------------------------
PORT=3001
NODE_ENV="development"  # development | production | test
API_PREFIX="api"
API_VERSION="v1"

# -----------------------------------------------------------------------------
# Database Configuration (Supabase/PostgreSQL)
# -----------------------------------------------------------------------------
# Primary database connection
DATABASE_URL="postgresql://username:password@host:port/database?schema=public"

# Connection pool settings
DATABASE_POOL_MIN=2
DATABASE_POOL_MAX=10
DATABASE_TIMEOUT=30000

# Prisma configuration
PRISMA_GENERATE_DATAPROXY=false

# -----------------------------------------------------------------------------
# Authentication & Security
# -----------------------------------------------------------------------------
# JWT Configuration
JWT_SECRET="your-super-secure-jwt-secret-key"
JWT_EXPIRES_IN="7d"
JWT_REFRESH_EXPIRES_IN="30d"

# Session configuration
SESSION_SECRET="your-session-secret-key"
SESSION_MAX_AGE=604800000  # 7 days in milliseconds

# Password hashing
BCRYPT_ROUNDS=12

# -----------------------------------------------------------------------------
# CORS Configuration
# -----------------------------------------------------------------------------
# Allowed origins (comma-separated)
CORS_ORIGINS="http://localhost:3000,https://your-frontend-domain.com"
CORS_CREDENTIALS=true

# -----------------------------------------------------------------------------
# Rate Limiting
# -----------------------------------------------------------------------------
RATE_LIMIT_WINDOW_MS=900000    # 15 minutes
RATE_LIMIT_MAX_REQUESTS=100    # Max requests per window per IP
RATE_LIMIT_SKIP_SUCCESS=false

# -----------------------------------------------------------------------------
# Payment Integration (Klarna)
# -----------------------------------------------------------------------------
# Klarna API credentials
KLARNA_USERNAME="your-klarna-username"
KLARNA_PASSWORD="your-klarna-password"
KLARNA_BASE_URL="https://api.playground.klarna.com"  # Use https://api.klarna.com for production

# Webhook configuration
KLARNA_WEBHOOK_SECRET="your-klarna-webhook-secret"

# -----------------------------------------------------------------------------
# File Upload Configuration
# -----------------------------------------------------------------------------
# Upload limits
MAX_FILE_SIZE=10485760  # 10MB in bytes
MAX_FILES_PER_REQUEST=5

# Allowed file types
ALLOWED_IMAGE_TYPES="image/jpeg,image/png,image/gif,image/webp"
ALLOWED_DOCUMENT_TYPES="application/pdf,text/plain"

# Storage configuration (Supabase Storage)
SUPABASE_STORAGE_BUCKET="uploads"
SUPABASE_STORAGE_URL="https://your-project.supabase.co/storage/v1"

# -----------------------------------------------------------------------------
# Email Configuration
# -----------------------------------------------------------------------------
# SMTP settings
SMTP_HOST="smtp.gmail.com"
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER="your-email@gmail.com"
SMTP_PASS="your-app-password"

# Email templates
FROM_EMAIL="noreply@tententen.com"
FROM_NAME="TenTenTen Web"
SUPPORT_EMAIL="support@tententen.com"

# -----------------------------------------------------------------------------
# Logging Configuration
# -----------------------------------------------------------------------------
LOG_LEVEL="debug"  # error | warn | info | debug
LOG_FORMAT="json"  # json | simple
LOG_FILE_ENABLED=true
LOG_FILE_PATH="./logs"

# Database query logging
ENABLE_QUERY_LOGGING=false

# -----------------------------------------------------------------------------
# Cache Configuration (Redis - Optional)
# -----------------------------------------------------------------------------
# Redis connection (if using Redis for caching)
REDIS_URL="redis://localhost:6379"
REDIS_PASSWORD=""
REDIS_DB=0

# Cache TTL settings (in seconds)
CACHE_TTL_DEFAULT=3600     # 1 hour
CACHE_TTL_USER_SESSION=86400  # 24 hours
CACHE_TTL_STATIC_DATA=604800  # 7 days

# -----------------------------------------------------------------------------
# External API Configuration
# -----------------------------------------------------------------------------
# Third-party service integrations
SPOTIFY_CLIENT_ID="your-spotify-client-id"
SPOTIFY_CLIENT_SECRET="your-spotify-client-secret"

# Social media APIs (Optional)
TWITTER_API_KEY="your-twitter-api-key"
TWITTER_API_SECRET="your-twitter-api-secret"

# -----------------------------------------------------------------------------
# Monitoring and Analytics
# -----------------------------------------------------------------------------
# Sentry for error tracking
SENTRY_DSN="your-sentry-dsn"
SENTRY_ENVIRONMENT="development"

# Application monitoring
ENABLE_METRICS=true
METRICS_PORT=9090

# Health check configuration
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_DATABASE=true
HEALTH_CHECK_REDIS=false

# -----------------------------------------------------------------------------
# Background Jobs (Optional)
# -----------------------------------------------------------------------------
# Job queue configuration
QUEUE_REDIS_URL="redis://localhost:6379"
QUEUE_DEFAULT_JOB_OPTIONS='{"removeOnComplete":10,"removeOnFail":50}'

# Cron job settings
ENABLE_CRON_JOBS=true
CLEANUP_INTERVAL="0 2 * * *"  # Daily at 2 AM

# -----------------------------------------------------------------------------
# Security Headers
# -----------------------------------------------------------------------------
# Helmet.js configuration
ENABLE_HELMET=true
CONTENT_SECURITY_POLICY=false
HSTS_MAX_AGE=31536000

# -----------------------------------------------------------------------------
# API Documentation
# -----------------------------------------------------------------------------
# Swagger/OpenAPI
ENABLE_API_DOCS=true
API_DOCS_PATH="docs"
API_DOCS_TITLE="TenTenTen Web API"
API_DOCS_VERSION="1.0.0"

# -----------------------------------------------------------------------------
# Development Tools
# -----------------------------------------------------------------------------
# Development-specific settings
ENABLE_CORS_DEBUG=false
ENABLE_REQUEST_LOGGING=true
ENABLE_RESPONSE_LOGGING=false

# Database seeding
ENABLE_DATABASE_SEEDING=false
SEED_ADMIN_EMAIL="admin@tententen.com"
SEED_ADMIN_PASSWORD="admin123"

# -----------------------------------------------------------------------------
# Webhook Configuration
# -----------------------------------------------------------------------------
# Webhook endpoints for external services
WEBHOOK_SECRET="your-webhook-secret"
WEBHOOK_TIMEOUT=30000  # 30 seconds

# -----------------------------------------------------------------------------
# Backup Configuration
# -----------------------------------------------------------------------------
# Database backup settings
BACKUP_ENABLED=false
BACKUP_SCHEDULE="0 3 * * *"  # Daily at 3 AM
BACKUP_RETENTION_DAYS=30

# -----------------------------------------------------------------------------
# Setup Instructions
# -----------------------------------------------------------------------------
# 1. Copy this file to .env.local in the backend directory
# 2. Update DATABASE_URL with your Supabase connection string
# 3. Generate secure secrets for JWT_SECRET and SESSION_SECRET
# 4. Configure CORS_ORIGINS to include your frontend URL
# 5. Set up payment provider credentials (Klarna)
# 6. Configure email settings for notifications
# 7. Restart the NestJS server after making changes
#
# Security Notes:
# - Never commit this file with real values to version control
# - Use strong, unique secrets for all authentication keys
# - Regularly rotate secrets in production
# - Use environment-specific values for different deployments
# - Enable monitoring and logging in production
# =============================================================================
